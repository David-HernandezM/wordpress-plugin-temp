export const __webpack_esm_id__=65;export const __webpack_esm_ids__=[65];export const __webpack_esm_modules__={8065:(e,n,o)=>{o.r(n),o.d(n,{isWeb3Injected:()=>b,packageInfo:()=>i,unwrapBytes:()=>u,web3Accounts:()=>v,web3AccountsSubscribe:()=>E,web3Enable:()=>y,web3EnablePromise:()=>w,web3FromAddress:()=>j,web3FromSource:()=>x,web3ListRpcProviders:()=>k,web3UseRpcProvider:()=>$,wrapBytes:()=>p});var t=o(9154);const r=(0,o(4611).D8)("catch","then");var s=o(4854),a=o(875),c=o(858);const i={name:"@polkadot/extension-dapp",path:new URL("file:///C:/Users/dh295/Documents/GEAR/work/wordpress/plugins/wordpress-plugin-temp/node_modules/.pnpm/@polkadot+extension-dapp@0._2696ba466c3868444d5cd4a9cb3d1bcb/node_modules/@polkadot/extension-dapp/packageInfo.js").pathname.substring(0,new URL("file:///C:/Users/dh295/Documents/GEAR/work/wordpress/plugins/wordpress-plugin-temp/node_modules/.pnpm/@polkadot+extension-dapp@0._2696ba466c3868444d5cd4a9cb3d1bcb/node_modules/@polkadot/extension-dapp/packageInfo.js").pathname.lastIndexOf("/")+1),type:"esm",version:"0.59.2"};var d=o(9676);const u=d.ZH,p=d.C1,l=window;l.injectedWeb3=l.injectedWeb3||{};let b=m(),w=null;function m(){return 0!==Object.values(l.injectedWeb3).filter(({connect:e,enable:n})=>!(!e&&!n)).length}function h(e){throw new Error(`${e}: web3Enable(originName) needs to be called before ${e}`)}function f(e,n,o){return n.map(({address:n,genesisHash:t,name:r,type:s})=>({address:42===n.length?n:(0,a.j)((0,c.F)(n),o),meta:{genesisHash:t,name:r,source:e},type:s}))}function g(e,n,o){return e.filter(e=>(!e.type||!o||o.includes(e.type))&&(!e.genesisHash||!n||e.genesisHash===n))}async function _(e,n){return w?(await w).filter(({name:e})=>!n||n.includes(e)):h(e)}function y(e,n=[]){if(!e)throw new Error("You must pass a name for your app to the web3Enable function");const o=n.length?Promise.all(n.map(e=>e().catch(()=>!1))):Promise.resolve([!0]);var r;return r=()=>o.then(()=>function(e){return Promise.all(Object.entries(l.injectedWeb3).map(([n,{connect:o,enable:r,version:s}])=>Promise.resolve().then(()=>o?o(e):r?r(e).then(e=>(0,t.b)({name:n,version:s||"unknown"},e)):Promise.reject(new Error("No connect(..) or enable(...) hook found"))).catch(({message:e})=>{console.error(`Error initializing ${n}: ${e}`)}))).then(e=>e.filter(e=>!!e))}(e).then(e=>e.map(e=>(e.accounts.subscribe||(e.accounts.subscribe=n=>(e.accounts.get().then(n).catch(console.error),()=>{})),e))).catch(()=>[]).then(e=>{const n=e.map(({name:e,version:n})=>`${e}/${n}`);return b=m(),console.info(`web3Enable: Enabled ${e.length} extension${1!==e.length?"s":""}: ${n.join(", ")}`),e})),w=new Promise(e=>{"complete"===document.readyState?e(r()):window.addEventListener("load",()=>e(r()))}),w}async function v({accountType:e,extensions:n,genesisHash:o,ss58Format:t}={}){const r=[],s=await _("web3Accounts",n),a=await Promise.all(s.map(async({accounts:n,name:r})=>{try{return f(r,g(await n.get(),o,e),t)}catch{return[]}}));return a.forEach(e=>{r.push(...e)}),console.info(`web3Accounts: Found ${r.length} address${1!==r.length?"es":""}`),r}async function E(e,{accountType:n,extensions:o,genesisHash:t,ss58Format:s}={}){const a=await _("web3AccountsSubscribe",o),c={},i=a.map(({accounts:{subscribe:o},name:a})=>o(o=>{c[a]=o;try{const o=e(Object.entries(c).reduce((e,[o,r])=>(e.push(...f(o,g(r,t,n),s)),e),[]));o&&r(o)&&o.catch(console.error)}catch(e){console.error(e)}}));return()=>{i.forEach(e=>{e()})}}async function x(e){if(!w)return h("web3FromSource");const n=await w,o=e&&n.find(({name:n})=>n===e);if(!o)throw new Error(`web3FromSource: Unable to find an injected ${e}`);return o}async function j(e){if(!w)return h("web3FromAddress");const n=await v();let o;if(e){const t=(0,c.F)(e);o=n.find(e=>(0,s.f)((0,c.F)(e.address),t))}if(!o)throw new Error(`web3FromAddress: Unable to find injected ${e}`);return x(o.meta.source)}async function k(e){const{provider:n}=await x(e);return n?n.listProviders():(console.warn(`Extension ${e} does not expose any provider`),null)}async function $(e,n){const{provider:o}=await x(e);if(!o)throw new Error(`Extension ${e} does not expose any provider`);return{meta:await o.startProvider(n),provider:o}}}};